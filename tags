!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABS_POSITION_MODE	alpha_motion_control.h	17;"	d
ACCO_ad	alpha_setting.h	284;"	d
ACCO_fc	alpha_setting.h	174;"	d
AD0_ad	alpha_setting.h	319;"	d
AD0_fc	alpha_setting.h	209;"	d
AD1_ad	alpha_setting.h	320;"	d
AD1_fc	alpha_setting.h	210;"	d
AD2_ad	alpha_setting.h	321;"	d
AD2_fc	alpha_setting.h	211;"	d
AD3_ad	alpha_setting.h	322;"	d
AD3_fc	alpha_setting.h	212;"	d
ADDR_ERROR_ad	alpha_setting.h	347;"	d
ADDR_ERROR_fc	alpha_setting.h	237;"	d
ALPHA_MOTION_CONTROL_H	alpha_motion_control.h	13;"	d
ALPHA_SETTING_H	alpha_setting.h	65;"	d
ALRM_CODE0_ad	alpha_setting.h	348;"	d
ALRM_CODE0_fc	alpha_setting.h	238;"	d
ALRM_CODE1_ad	alpha_setting.h	349;"	d
ALRM_CODE1_fc	alpha_setting.h	239;"	d
ALRM_CODE2_ad	alpha_setting.h	350;"	d
ALRM_CODE2_fc	alpha_setting.h	240;"	d
ALRM_CODE3_ad	alpha_setting.h	351;"	d
ALRM_CODE3_fc	alpha_setting.h	241;"	d
ALRM_CODE4_ad	alpha_setting.h	352;"	d
ALRM_CODE4_fc	alpha_setting.h	242;"	d
ALRM_DECT_ad	alpha_setting.h	332;"	d
ALRM_DECT_fc	alpha_setting.h	222;"	d
ALRM_DETC_ad	alpha_setting.h	368;"	d
ALRM_DETC_fc	alpha_setting.h	258;"	d
AM335X_SETTING_H	am335x_setting.h	2;"	d
ANTI_FREQ_SLCT0_ad	alpha_setting.h	317;"	d
ANTI_FREQ_SLCT0_fc	alpha_setting.h	207;"	d
ANTI_FREQ_SLCT1_ad	alpha_setting.h	318;"	d
ANTI_FREQ_SLCT1_fc	alpha_setting.h	208;"	d
ASCIILINESZ	iniparser.c	15;"	d	file:
BATRY_WRNING_ad	alpha_setting.h	357;"	d
BATRY_WRNING_fc	alpha_setting.h	247;"	d
BITS_BUFFER_SIZE	alpha_setting.h	383;"	d
BRDCST_CANCEL_ad	alpha_setting.h	324;"	d
BRDCST_CANCEL_fc	alpha_setting.h	214;"	d
BRK_TIMING_ad	alpha_setting.h	331;"	d
BRK_TIMING_fc	alpha_setting.h	221;"	d
B_BLACK	elog.c	78;"	d	file:
B_BLUE	elog.c	82;"	d	file:
B_CYAN	elog.c	84;"	d	file:
B_GREEN	elog.c	80;"	d	file:
B_MAGENTA	elog.c	83;"	d	file:
B_NULL	elog.c	77;"	d	file:
B_RED	elog.c	79;"	d	file:
B_WHITE	elog.c	85;"	d	file:
B_YELLOW	elog.c	81;"	d	file:
CC	Makefile	/^CC=arm-linux-gnueabihf-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-I.\/$/;"	m
CMD_PST_CMPL_ad	alpha_setting.h	372;"	d
CMD_PST_CMPL_fc	alpha_setting.h	262;"	d
CMD_PULSE_INHIBIT_ad	alpha_setting.h	293;"	d
CMD_PULSE_INHIBIT_fc	alpha_setting.h	183;"	d
CMD_PULSE_RTO1_ad	alpha_setting.h	294;"	d
CMD_PULSE_RTO1_fc	alpha_setting.h	184;"	d
COM_PULSE_RTO2_ad	alpha_setting.h	295;"	d
COM_PULSE_RTO2_fc	alpha_setting.h	185;"	d
CONT10_ad	alpha_setting.h	124;"	d
CONT11_ad	alpha_setting.h	125;"	d
CONT12_ad	alpha_setting.h	126;"	d
CONT13_ad	alpha_setting.h	127;"	d
CONT14_ad	alpha_setting.h	128;"	d
CONT15_ad	alpha_setting.h	129;"	d
CONT16_ad	alpha_setting.h	130;"	d
CONT17_ad	alpha_setting.h	131;"	d
CONT18_ad	alpha_setting.h	132;"	d
CONT19_ad	alpha_setting.h	133;"	d
CONT1_ad	alpha_setting.h	117;"	d
CONT20_ad	alpha_setting.h	134;"	d
CONT21_ad	alpha_setting.h	135;"	d
CONT22_ad	alpha_setting.h	136;"	d
CONT23_ad	alpha_setting.h	137;"	d
CONT24_ad	alpha_setting.h	138;"	d
CONT2_ad	alpha_setting.h	118;"	d
CONT3_ad	alpha_setting.h	119;"	d
CONT4_ad	alpha_setting.h	120;"	d
CONT5_ad	alpha_setting.h	121;"	d
CONT9_ad	alpha_setting.h	123;"	d
CONT_A_THROUGH_ad	alpha_setting.h	376;"	d
CONT_A_THROUGH_fc	alpha_setting.h	266;"	d
CONT_B_THROUGH_ad	alpha_setting.h	377;"	d
CONT_B_THROUGH_fc	alpha_setting.h	267;"	d
CONT_C_THROUGH_ad	alpha_setting.h	378;"	d
CONT_C_THROUGH_fc	alpha_setting.h	268;"	d
CONT_D_THROUGH_ad	alpha_setting.h	379;"	d
CONT_D_THROUGH_fc	alpha_setting.h	269;"	d
CONT_E_THROUGH_ad	alpha_setting.h	380;"	d
CONT_E_THROUGH_fc	alpha_setting.h	270;"	d
CSI_END	elog.c	66;"	d	file:
CSI_START	elog.c	65;"	d	file:
CTRL_MOD_SLCT_ad	alpha_setting.h	301;"	d
CTRL_MOD_SLCT_fc	alpha_setting.h	191;"	d
CYC_END_DETC_ad	alpha_setting.h	337;"	d
CYC_END_DETC_fc	alpha_setting.h	227;"	d
DATA_ERROR_ad	alpha_setting.h	346;"	d
DATA_ERROR_fc	alpha_setting.h	236;"	d
DEPS	Makefile	/^DEPS=$(wildcard .\/*.h)$/;"	m
DEVIATION_CLR_ad	alpha_setting.h	311;"	d
DEVIATION_CLR_fc	alpha_setting.h	201;"	d
DICTMINSZ	dictionary.c	27;"	d	file:
DICT_INVALID_KEY	dictionary.c	30;"	d	file:
ECONNREFUSED	modbus-tcp.h	30;"	d
ECONNRESET	modbus-tcp.h	29;"	d
EDT_PERMISSION_ad	alpha_setting.h	316;"	d
EDT_PERMISSION_fc	alpha_setting.h	206;"	d
ED_PRMSION_RSP_ad	alpha_setting.h	345;"	d
ED_PRMSION_RSP_fc	alpha_setting.h	235;"	d
ELCT_GEAR_NUM_SEL0_ad	alpha_setting.h	291;"	d
ELCT_GEAR_NUM_SEL0_fc	alpha_setting.h	181;"	d
ELCT_GEAR_NUM_SEL1_ad	alpha_setting.h	292;"	d
ELCT_GEAR_NUM_SEL1_fc	alpha_setting.h	182;"	d
ELOG_ASSERT	elog.h	57;"	d
ELOG_ASSERT	elog.h	68;"	d
ELOG_ASSERT_ENABLE	elog_cfg.h	37;"	d
ELOG_ASYNC_OUTPUT_BUF_SIZE	elog_cfg.h	53;"	d
ELOG_ASYNC_OUTPUT_PTHREAD_PRIORITY	elog_async.c	50;"	d	file:
ELOG_ASYNC_OUTPUT_PTHREAD_STACK_SIZE	elog_async.c	44;"	d	file:
ELOG_ASYNC_OUTPUT_PTHREAD_STACK_SIZE	elog_async.c	46;"	d	file:
ELOG_ASYNC_OUTPUT_USING_PTHREAD	elog_cfg.h	57;"	d
ELOG_ASYNC_POLL_GET_LOG_BUF_SIZE	elog_async.c	54;"	d	file:
ELOG_COLOR_ASSERT	elog.c	93;"	d	file:
ELOG_COLOR_DEBUG	elog.c	105;"	d	file:
ELOG_COLOR_ENABLE	elog_cfg.h	49;"	d
ELOG_COLOR_ERROR	elog.c	96;"	d	file:
ELOG_COLOR_INFO	elog.c	102;"	d	file:
ELOG_COLOR_VERBOSE	elog.c	108;"	d	file:
ELOG_COLOR_WARN	elog.c	99;"	d	file:
ELOG_FILTER_KW_MAX_LEN	elog_cfg.h	45;"	d
ELOG_FILTER_TAG_MAX_LEN	elog_cfg.h	43;"	d
ELOG_FMT_ALL	elog.h	135;"	d
ELOG_FMT_DIR	elog.h	/^    ELOG_FMT_DIR    = 1 << 5, \/**< file directory and name *\/$/;"	e	enum:__anon1
ELOG_FMT_FUNC	elog.h	/^    ELOG_FMT_FUNC   = 1 << 6, \/**< function name *\/$/;"	e	enum:__anon1
ELOG_FMT_LINE	elog.h	/^    ELOG_FMT_LINE   = 1 << 7, \/**< line number *\/$/;"	e	enum:__anon1
ELOG_FMT_LVL	elog.h	/^    ELOG_FMT_LVL    = 1 << 0, \/**< level *\/$/;"	e	enum:__anon1
ELOG_FMT_P_INFO	elog.h	/^    ELOG_FMT_P_INFO = 1 << 3, \/**< process info *\/$/;"	e	enum:__anon1
ELOG_FMT_TAG	elog.h	/^    ELOG_FMT_TAG    = 1 << 1, \/**< tag *\/$/;"	e	enum:__anon1
ELOG_FMT_TIME	elog.h	/^    ELOG_FMT_TIME   = 1 << 2, \/**< current time *\/$/;"	e	enum:__anon1
ELOG_FMT_T_INFO	elog.h	/^    ELOG_FMT_T_INFO = 1 << 4, \/**< thread info *\/$/;"	e	enum:__anon1
ELOG_LINE_BUF_SIZE	elog_cfg.h	39;"	d
ELOG_LINE_NUM_MAX_LEN	elog_cfg.h	41;"	d
ELOG_LVL_ASSERT	elog.h	42;"	d
ELOG_LVL_DEBUG	elog.h	46;"	d
ELOG_LVL_ERROR	elog.h	43;"	d
ELOG_LVL_INFO	elog.h	45;"	d
ELOG_LVL_TOTAL_NUM	elog.h	50;"	d
ELOG_LVL_VERBOSE	elog.h	47;"	d
ELOG_LVL_WARN	elog.h	44;"	d
ELOG_NEWLINE_SIGN	elog_cfg.h	47;"	d
ELOG_NO_ERR	elog.h	/^    ELOG_NO_ERR,$/;"	e	enum:__anon4
ELOG_OUTPUT_ENABLE	elog_cfg.h	33;"	d
ELOG_OUTPUT_LVL	elog_cfg.h	35;"	d
ELOG_SW_VERSION	elog.h	53;"	d
EMBBADCRC	modbus.h	115;"	d
EMBBADDATA	modbus.h	116;"	d
EMBBADEXC	modbus.h	117;"	d
EMBMDATA	modbus.h	119;"	d
EMBUNKEXC	modbus.h	118;"	d
EMBXACK	modbus.h	107;"	d
EMBXGPATH	modbus.h	111;"	d
EMBXGTAR	modbus.h	112;"	d
EMBXILADD	modbus.h	104;"	d
EMBXILFUN	modbus.h	103;"	d
EMBXILVAL	modbus.h	105;"	d
EMBXMEMPAR	modbus.h	110;"	d
EMBXNACK	modbus.h	109;"	d
EMBXSBUSY	modbus.h	108;"	d
EMBXSFAIL	modbus.h	106;"	d
EMG_ad	alpha_setting.h	282;"	d
EMG_fc	alpha_setting.h	172;"	d
ENOPROTOOPT	modbus-tcp.h	32;"	d
ENOTSUP	modbus-rtu-private.h	41;"	d
ETIMEDOUT	modbus-tcp.h	31;"	d
EXTR_REGN_RESIST_OH_ad	alpha_setting.h	299;"	d
EXTR_REGN_RESIST_OH_fc	alpha_setting.h	189;"	d
EasyLogger	elog.h	/^}EasyLogger, *EasyLogger_t;$/;"	t	typeref:struct:__anon3
EasyLogger_t	elog.h	/^}EasyLogger, *EasyLogger_t;$/;"	t	typeref:struct:__anon3
ElogErrCode	elog.h	/^} ElogErrCode;$/;"	t	typeref:enum:__anon4
ElogFilter	elog.h	/^} ElogFilter, *ElogFilter_t;$/;"	t	typeref:struct:__anon2
ElogFilter_t	elog.h	/^} ElogFilter, *ElogFilter_t;$/;"	t	typeref:struct:__anon2
ElogFmtIndex	elog.h	/^} ElogFmtIndex;$/;"	t	typeref:enum:__anon1
FALSE	am335x_setting.c	15;"	d	file:
FALSE	modbus.h	48;"	d
FRC_STP_DETC_ad	alpha_setting.h	356;"	d
FRC_STP_DETC_fc	alpha_setting.h	246;"	d
FREE_RUN_ad	alpha_setting.h	315;"	d
FREE_RUN_fc	alpha_setting.h	205;"	d
FWD_ad	alpha_setting.h	275;"	d
FWD_fc	alpha_setting.h	165;"	d
F_BLACK	elog.c	68;"	d	file:
F_BLUE	elog.c	72;"	d	file:
F_CYAN	elog.c	74;"	d	file:
F_GREEN	elog.c	70;"	d	file:
F_MAGENTA	elog.c	73;"	d	file:
F_RED	elog.c	69;"	d	file:
F_WHITE	elog.c	75;"	d	file:
F_YELLOW	elog.c	71;"	d	file:
GACCE_TIME	client.c	/^    GACCE_TIME=256,$/;"	e	enum:__anon12	file:
GACCE_TIME	cmdparser.c	/^    GACCE_TIME=256,$/;"	e	enum:__anon9	file:
GAIN_SWITCH_ad	alpha_setting.h	286;"	d
GAIN_SWITCH_fc	alpha_setting.h	176;"	d
GCRUISE	client.c	/^    GCRUISE=4,$/;"	e	enum:__anon12	file:
GCRUISE	cmdparser.c	/^    GCRUISE=4,$/;"	e	enum:__anon9	file:
GDECE_TIME	client.c	/^    GDECE_TIME=512,$/;"	e	enum:__anon12	file:
GDECE_TIME	cmdparser.c	/^    GDECE_TIME=512,$/;"	e	enum:__anon9	file:
GEMG	client.c	/^    GEMG=64,$/;"	e	enum:__anon12	file:
GEMG	cmdparser.c	/^    GEMG=64,$/;"	e	enum:__anon9	file:
GFLAGS	client.c	/^} GFLAGS;$/;"	t	typeref:enum:__anon12	file:
GFLAGS	cmdparser.c	/^} GFLAGS;$/;"	t	typeref:enum:__anon9	file:
GFREE_ON	client.c	/^    GFREE_ON=32,$/;"	e	enum:__anon12	file:
GFREE_ON	cmdparser.c	/^    GFREE_ON=32,$/;"	e	enum:__anon9	file:
GLEFT	client.c	/^    GLEFT=2,$/;"	e	enum:__anon12	file:
GLEFT	cmdparser.c	/^    GLEFT=2,$/;"	e	enum:__anon9	file:
GLEFT_PST	client.c	/^    GLEFT_PST=2048$/;"	e	enum:__anon12	file:
GLEFT_PST	cmdparser.c	/^    GLEFT_PST=2048$/;"	e	enum:__anon9	file:
GPAUSE	client.c	/^    GPAUSE=8,$/;"	e	enum:__anon12	file:
GPAUSE	cmdparser.c	/^    GPAUSE=8,$/;"	e	enum:__anon9	file:
GPST_CANCEL	client.c	/^    GPST_CANCEL=16,$/;"	e	enum:__anon12	file:
GPST_CANCEL	cmdparser.c	/^    GPST_CANCEL=16,$/;"	e	enum:__anon9	file:
GRIGHT	client.c	/^    GRIGHT=1,$/;"	e	enum:__anon12	file:
GRIGHT	cmdparser.c	/^    GRIGHT=1,$/;"	e	enum:__anon9	file:
GRIGHT_PST	client.c	/^    GRIGHT_PST=1024,$/;"	e	enum:__anon12	file:
GRIGHT_PST	cmdparser.c	/^    GRIGHT_PST=1024,$/;"	e	enum:__anon9	file:
GSPEED	client.c	/^    GSPEED=128,$/;"	e	enum:__anon12	file:
GSPEED	cmdparser.c	/^    GSPEED=128,$/;"	e	enum:__anon9	file:
HAVE_ARPA_INET_H	config.h	5;"	d
HAVE_DECL_TIOCSRS485	config.h	9;"	d
HAVE_DECL___CYGWIN__	config.h	13;"	d
HAVE_DLFCN_H	config.h	16;"	d
HAVE_ERRNO_H	config.h	19;"	d
HAVE_FCNTL_H	config.h	22;"	d
HAVE_FORK	config.h	25;"	d
HAVE_GETADDRINFO	config.h	28;"	d
HAVE_GETTIMEOFDAY	config.h	31;"	d
HAVE_INET_NTOA	config.h	34;"	d
HAVE_INTTYPES_H	config.h	37;"	d
HAVE_LIMITS_H	config.h	40;"	d
HAVE_LINUX_SERIAL_H	config.h	43;"	d
HAVE_MEMORY_H	config.h	46;"	d
HAVE_MEMSET	config.h	49;"	d
HAVE_NETDB_H	config.h	52;"	d
HAVE_NETINET_IN_H	config.h	55;"	d
HAVE_NETINET_TCP_H	config.h	58;"	d
HAVE_SELECT	config.h	61;"	d
HAVE_SOCKET	config.h	64;"	d
HAVE_STDINT_H	config.h	67;"	d
HAVE_STDLIB_H	config.h	70;"	d
HAVE_STRERROR	config.h	73;"	d
HAVE_STRINGS_H	config.h	76;"	d
HAVE_STRING_H	config.h	79;"	d
HAVE_SYS_IOCTL_H	config.h	85;"	d
HAVE_SYS_SOCKET_H	config.h	88;"	d
HAVE_SYS_STAT_H	config.h	91;"	d
HAVE_SYS_TIME_H	config.h	94;"	d
HAVE_SYS_TYPES_H	config.h	97;"	d
HAVE_TERMIOS_H	config.h	100;"	d
HAVE_TIME_H	config.h	103;"	d
HAVE_UNISTD_H	config.h	106;"	d
HAVE_VFORK	config.h	109;"	d
HAVE_WORKING_FORK	config.h	118;"	d
HAVE_WORKING_VFORK	config.h	121;"	d
HMING_CMPL_ad	alpha_setting.h	338;"	d
HMING_CMPL_fc	alpha_setting.h	228;"	d
HM_PST_LS_DETC_ad	alpha_setting.h	355;"	d
HM_PST_LS_DETC_fc	alpha_setting.h	245;"	d
IMME_VLU_ACC_TIM_ad	alpha_setting.h	113;"	d
IMME_VLU_CHG_CMPL_ad	alpha_setting.h	371;"	d
IMME_VLU_CHG_CMPL_fc	alpha_setting.h	261;"	d
IMME_VLU_CHG_ad	alpha_setting.h	290;"	d
IMME_VLU_CHG_fc	alpha_setting.h	180;"	d
IMME_VLU_CNTIN_CMPL_ad	alpha_setting.h	370;"	d
IMME_VLU_CNTIN_CMPL_fc	alpha_setting.h	260;"	d
IMME_VLU_CNTIN_PERMS_ad	alpha_setting.h	369;"	d
IMME_VLU_CNTIN_PERMS_fc	alpha_setting.h	259;"	d
IMME_VLU_CTINU_ad	alpha_setting.h	289;"	d
IMME_VLU_CTINU_fc	alpha_setting.h	179;"	d
IMME_VLU_DEC_TIM_ad	alpha_setting.h	114;"	d
IMME_VLU_POSITION_ad	alpha_setting.h	111;"	d
IMME_VLU_SPEED_ad	alpha_setting.h	112;"	d
IMME_VLU_STATUS_ad	alpha_setting.h	110;"	d
INC_POSITION_MODE	alpha_motion_control.h	18;"	d
INI_INVALID_KEY	iniparser.c	16;"	d	file:
INP_ad	alpha_setting.h	328;"	d
INP_fc	alpha_setting.h	218;"	d
INTRUPT_IN_EN_ad	alpha_setting.h	309;"	d
INTRUPT_IN_EN_fc	alpha_setting.h	199;"	d
INTRUPT_IN_ad	alpha_setting.h	310;"	d
INTRUPT_IN_fc	alpha_setting.h	200;"	d
INTRUPT_PST_DECT_ad	alpha_setting.h	375;"	d
INTRUPT_PST_DECT_fc	alpha_setting.h	265;"	d
LIBMODBUS_VERSION	modbus-version.h	31;"	d
LIBMODBUS_VERSION_CHECK	modbus-version.h	44;"	d
LIBMODBUS_VERSION_HEX	modbus-version.h	38;"	d
LIBMODBUS_VERSION_MAJOR	modbus-version.h	22;"	d
LIBMODBUS_VERSION_MICRO	modbus-version.h	28;"	d
LIBMODBUS_VERSION_MINOR	modbus-version.h	25;"	d
LIBMODBUS_VERSION_STRING	modbus-version.h	35;"	d
LIBS	Makefile	/^LIBS=-lpthread$/;"	m
LIFE_WRNING_ad	alpha_setting.h	358;"	d
LIFE_WRNING_fc	alpha_setting.h	248;"	d
LINE_COMMENT	iniparser.c	/^    LINE_COMMENT,$/;"	e	enum:_line_status_	file:
LINE_EMPTY	iniparser.c	/^    LINE_EMPTY,$/;"	e	enum:_line_status_	file:
LINE_ERROR	iniparser.c	/^    LINE_ERROR,$/;"	e	enum:_line_status_	file:
LINE_SECTION	iniparser.c	/^    LINE_SECTION,$/;"	e	enum:_line_status_	file:
LINE_UNPROCESSED	iniparser.c	/^    LINE_UNPROCESSED,$/;"	e	enum:_line_status_	file:
LINE_VALUE	iniparser.c	/^    LINE_VALUE$/;"	e	enum:_line_status_	file:
LMTER_DETC_ad	alpha_setting.h	335;"	d
LMTER_DETC_fc	alpha_setting.h	225;"	d
LOG_LVL	elog.h	202;"	d
LOG_TAG	elog.c	29;"	d	file:
LOG_TAG	elog.h	199;"	d
LS_ad	alpha_setting.h	279;"	d
LS_fc	alpha_setting.h	169;"	d
LT_OBJDIR	config.h	125;"	d
MAXVALSZ	dictionary.c	24;"	d	file:
MAX_MESSAGE_LENGTH	modbus.c	44;"	d	file:
MAX_STRIDE	am335x_setting.c	20;"	d	file:
MAX_STRIDE	am335x_setting.h	7;"	d
MD0_ad	alpha_setting.h	359;"	d
MD0_fc	alpha_setting.h	249;"	d
MD1_ad	alpha_setting.h	360;"	d
MD1_fc	alpha_setting.h	250;"	d
MD2_ad	alpha_setting.h	361;"	d
MD2_fc	alpha_setting.h	251;"	d
MD3_ad	alpha_setting.h	362;"	d
MD3_fc	alpha_setting.h	252;"	d
MD4_ad	alpha_setting.h	363;"	d
MD4_fc	alpha_setting.h	253;"	d
MD5_ad	alpha_setting.h	364;"	d
MD5_fc	alpha_setting.h	254;"	d
MD6_ad	alpha_setting.h	365;"	d
MD6_fc	alpha_setting.h	255;"	d
MD7_ad	alpha_setting.h	366;"	d
MD7_fc	alpha_setting.h	256;"	d
MODBUS_BEGIN_DECLS	modbus.h	38;"	d
MODBUS_BEGIN_DECLS	modbus.h	41;"	d
MODBUS_BROADCAST_ADDRESS	modbus.h	63;"	d
MODBUS_END_DECLS	modbus.h	39;"	d
MODBUS_END_DECLS	modbus.h	42;"	d
MODBUS_ENOBASE	modbus.h	85;"	d
MODBUS_ERROR_RECOVERY_LINK	modbus.h	/^    MODBUS_ERROR_RECOVERY_LINK          = (1<<1),$/;"	e	enum:__anon8
MODBUS_ERROR_RECOVERY_NONE	modbus.h	/^    MODBUS_ERROR_RECOVERY_NONE          = 0,$/;"	e	enum:__anon8
MODBUS_ERROR_RECOVERY_PROTOCOL	modbus.h	/^    MODBUS_ERROR_RECOVERY_PROTOCOL      = (1<<2),$/;"	e	enum:__anon8
MODBUS_EXCEPTION_ACKNOWLEDGE	modbus.h	/^    MODBUS_EXCEPTION_ACKNOWLEDGE,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_GATEWAY_PATH	modbus.h	/^    MODBUS_EXCEPTION_GATEWAY_PATH,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_GATEWAY_TARGET	modbus.h	/^    MODBUS_EXCEPTION_GATEWAY_TARGET,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS	modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE	modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_ILLEGAL_FUNCTION	modbus.h	/^    MODBUS_EXCEPTION_ILLEGAL_FUNCTION = 0x01,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_MAX	modbus.h	/^    MODBUS_EXCEPTION_MAX$/;"	e	enum:__anon6
MODBUS_EXCEPTION_MEMORY_PARITY	modbus.h	/^    MODBUS_EXCEPTION_MEMORY_PARITY,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_NEGATIVE_ACKNOWLEDGE	modbus.h	/^    MODBUS_EXCEPTION_NEGATIVE_ACKNOWLEDGE,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_NOT_DEFINED	modbus.h	/^    MODBUS_EXCEPTION_NOT_DEFINED,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY	modbus.h	/^    MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY,$/;"	e	enum:__anon6
MODBUS_EXCEPTION_SLAVE_OR_SERVER_FAILURE	modbus.h	/^    MODBUS_EXCEPTION_SLAVE_OR_SERVER_FAILURE,$/;"	e	enum:__anon6
MODBUS_GET_HIGH_BYTE	modbus.h	201;"	d
MODBUS_GET_INT16_FROM_INT8	modbus.h	204;"	d
MODBUS_GET_INT32_FROM_INT16	modbus.h	203;"	d
MODBUS_GET_LOW_BYTE	modbus.h	202;"	d
MODBUS_MAX_READ_BITS	modbus.h	70;"	d
MODBUS_MAX_READ_REGISTERS	modbus.h	80;"	d
MODBUS_MAX_RW_WRITE_REGISTERS	modbus.h	82;"	d
MODBUS_MAX_WRITE_BITS	modbus.h	71;"	d
MODBUS_MAX_WRITE_REGISTERS	modbus.h	81;"	d
MODBUS_RTU_MAX_ADU_LENGTH	modbus-rtu.h	29;"	d
MODBUS_RTU_RS232	modbus-rtu.h	34;"	d
MODBUS_RTU_RS485	modbus-rtu.h	35;"	d
MODBUS_SET_INT16_TO_INT8	modbus.h	205;"	d
MODBUS_TCP_DEFAULT_PORT	modbus-tcp.h	35;"	d
MODBUS_TCP_MAX_ADU_LENGTH	modbus-tcp.h	41;"	d
MODBUS_TCP_SLAVE	modbus-tcp.h	36;"	d
MSG_CONFIRMATION	modbus.c	/^    MSG_CONFIRMATION$/;"	e	enum:__anon11	file:
MSG_INDICATION	modbus.c	/^    MSG_INDICATION,$/;"	e	enum:__anon11	file:
MSG_LENGTH_UNDEFINED	modbus.c	36;"	d	file:
MSG_NOSIGNAL	modbus-tcp.c	57;"	d	file:
OBJS	Makefile	/^OBJS=$(patsubst %.c, %.o, $(notdir $(SRC)))$/;"	m
OFF	modbus.h	56;"	d
ON	modbus.h	60;"	d
OPLOOPS	alpha_setting.h	70;"	d
ORG_ad	alpha_setting.h	278;"	d
ORG_fc	alpha_setting.h	168;"	d
ORLD_WRNING_ad	alpha_setting.h	343;"	d
ORLD_WRNING_fc	alpha_setting.h	233;"	d
OS_BSD	modbus-tcp.c	44;"	d	file:
OS_WIN32	modbus-tcp.c	30;"	d	file:
OT_DETC_ad	alpha_setting.h	336;"	d
OT_DETC_fc	alpha_setting.h	226;"	d
OT_MINUS_DETC_ad	alpha_setting.h	354;"	d
OT_MINUS_DETC_fc	alpha_setting.h	244;"	d
OT_MINUS_ad	alpha_setting.h	281;"	d
OT_MINUS_fc	alpha_setting.h	171;"	d
OT_PLUS_DETC_ad	alpha_setting.h	353;"	d
OT_PLUS_DETC_fc	alpha_setting.h	243;"	d
OT_PLUS_ad	alpha_setting.h	280;"	d
OT_PLUS_fc	alpha_setting.h	170;"	d
OUT10_ad	alpha_setting.h	148;"	d
OUT11_ad	alpha_setting.h	149;"	d
OUT12_ad	alpha_setting.h	150;"	d
OUT13_ad	alpha_setting.h	151;"	d
OUT14_ad	alpha_setting.h	152;"	d
OUT15_ad	alpha_setting.h	153;"	d
OUT16_ad	alpha_setting.h	154;"	d
OUT17_ad	alpha_setting.h	155;"	d
OUT18_ad	alpha_setting.h	156;"	d
OUT19_ad	alpha_setting.h	157;"	d
OUT1_ad	alpha_setting.h	140;"	d
OUT20_ad	alpha_setting.h	158;"	d
OUT21_ad	alpha_setting.h	159;"	d
OUT2_ad	alpha_setting.h	141;"	d
OUT3_ad	alpha_setting.h	142;"	d
OUT6_ad	alpha_setting.h	144;"	d
OUT7_ad	alpha_setting.h	145;"	d
OUT8_ad	alpha_setting.h	146;"	d
OUT9_ad	alpha_setting.h	147;"	d
OVERRIDE1_ad	alpha_setting.h	305;"	d
OVERRIDE1_fc	alpha_setting.h	195;"	d
OVERRIDE2_ad	alpha_setting.h	306;"	d
OVERRIDE2_fc	alpha_setting.h	196;"	d
OVERRIDE4_ad	alpha_setting.h	307;"	d
OVERRIDE4_fc	alpha_setting.h	197;"	d
OVERRIDE8_ad	alpha_setting.h	308;"	d
OVERRIDE8_fc	alpha_setting.h	198;"	d
OVERRIDE_EN_ad	alpha_setting.h	304;"	d
OVERRIDE_EN_fc	alpha_setting.h	194;"	d
OVER_WR_CMPL_ad	alpha_setting.h	330;"	d
OVER_WR_CMPL_fc	alpha_setting.h	220;"	d
PA1_01_ad	alpha_setting.h	73;"	d
PA2_40_ad	alpha_setting.h	74;"	d
PA3_10_ad	alpha_setting.h	77;"	d
PA3_11_ad	alpha_setting.h	78;"	d
PA3_12_ad	alpha_setting.h	79;"	d
PA3_13_ad	alpha_setting.h	80;"	d
PA3_14_ad	alpha_setting.h	81;"	d
PA3_15_ad	alpha_setting.h	82;"	d
PA3_16_ad	alpha_setting.h	83;"	d
PA3_17_ad	alpha_setting.h	84;"	d
PA3_18_ad	alpha_setting.h	85;"	d
PA3_19_ad	alpha_setting.h	86;"	d
PA3_20_ad	alpha_setting.h	87;"	d
PA3_21_ad	alpha_setting.h	88;"	d
PA3_22_ad	alpha_setting.h	89;"	d
PA3_23_ad	alpha_setting.h	90;"	d
PA3_24_ad	alpha_setting.h	91;"	d
PA3_56_ad	alpha_setting.h	93;"	d
PA3_57_ad	alpha_setting.h	94;"	d
PA3_58_ad	alpha_setting.h	95;"	d
PA3_59_ad	alpha_setting.h	96;"	d
PA3_60_ad	alpha_setting.h	97;"	d
PA3_61_ad	alpha_setting.h	98;"	d
PA3_62_ad	alpha_setting.h	99;"	d
PA3_63_ad	alpha_setting.h	100;"	d
PA3_64_ad	alpha_setting.h	101;"	d
PA3_65_ad	alpha_setting.h	102;"	d
PA3_66_ad	alpha_setting.h	103;"	d
PA3_67_ad	alpha_setting.h	104;"	d
PA3_68_ad	alpha_setting.h	105;"	d
PA3_69_ad	alpha_setting.h	106;"	d
PA3_70_ad	alpha_setting.h	107;"	d
PA3_71_ad	alpha_setting.h	108;"	d
PA3_9_ad	alpha_setting.h	76;"	d
PACKAGE	config.h	128;"	d
PACKAGE_BUGREPORT	config.h	131;"	d
PACKAGE_NAME	config.h	134;"	d
PACKAGE_STRING	config.h	137;"	d
PACKAGE_TARNAME	config.h	140;"	d
PACKAGE_URL	config.h	143;"	d
PACKAGE_VERSION	config.h	146;"	d
PAUSE_ad	alpha_setting.h	297;"	d
PAUSE_fc	alpha_setting.h	187;"	d
POINT_DETC_AREA1_ad	alpha_setting.h	333;"	d
POINT_DETC_AREA1_fc	alpha_setting.h	223;"	d
POINT_DETC_AREA2_ad	alpha_setting.h	334;"	d
POINT_DETC_AREA2_fc	alpha_setting.h	224;"	d
PROPORTIONAL_CTRL_ad	alpha_setting.h	296;"	d
PROPORTIONAL_CTRL_fc	alpha_setting.h	186;"	d
PST_CANCEL_ad	alpha_setting.h	298;"	d
PST_CANCEL_fc	alpha_setting.h	188;"	d
PST_CTRL_ad	alpha_setting.h	302;"	d
PST_CTRL_fc	alpha_setting.h	192;"	d
PST_DATA_SLCT_ad	alpha_setting.h	323;"	d
PST_DATA_SLCT_fc	alpha_setting.h	213;"	d
PST_PRESET_ad	alpha_setting.h	285;"	d
PST_PRESET_fc	alpha_setting.h	175;"	d
PST_PRST_CMPL_ad	alpha_setting.h	367;"	d
PST_PRST_CMPL_fc	alpha_setting.h	257;"	d
PY_BUF_SIZE	modbus-rtu-private.h	44;"	d
RANGE1_OF_PST_ad	alpha_setting.h	373;"	d
RANGE1_OF_PST_fc	alpha_setting.h	263;"	d
RANGE2_OF_PST_ad	alpha_setting.h	374;"	d
RANGE2_OF_PST_fc	alpha_setting.h	264;"	d
RDY_ad	alpha_setting.h	327;"	d
RDY_fc	alpha_setting.h	217;"	d
REGISTERS_BUFFER_SIZE	alpha_setting.h	382;"	d
REV_ad	alpha_setting.h	276;"	d
REV_fc	alpha_setting.h	166;"	d
RST_ad	alpha_setting.h	283;"	d
RST_fc	alpha_setting.h	173;"	d
SERVO_ON_ad	alpha_setting.h	274;"	d
SERVO_ON_fc	alpha_setting.h	164;"	d
SHUT_RDWR	modbus-tcp.c	37;"	d	file:
SPD_COINCD_ad	alpha_setting.h	341;"	d
SPD_COINCD_fc	alpha_setting.h	231;"	d
SPD_LMT_DETC_ad	alpha_setting.h	329;"	d
SPD_LMT_DETC_fc	alpha_setting.h	219;"	d
SRC	Makefile	/^SRC=$(wildcard .\/*.c)$/;"	m
START_ad	alpha_setting.h	277;"	d
START_fc	alpha_setting.h	167;"	d
STDC_HEADERS	config.h	149;"	d
S_BLINK	elog.c	89;"	d	file:
S_BOLD	elog.c	87;"	d	file:
S_NORMAL	elog.c	90;"	d	file:
S_RDY_ad	alpha_setting.h	344;"	d
S_RDY_fc	alpha_setting.h	234;"	d
S_UNDERLINE	elog.c	88;"	d	file:
TARGET	Makefile	/^TARGET=client-test$/;"	m
TEACHING_ad	alpha_setting.h	300;"	d
TEACHING_fc	alpha_setting.h	190;"	d
TIME_WITH_SYS_TIME	config.h	152;"	d
TRQ_CTRL_ad	alpha_setting.h	303;"	d
TRQ_CTRL_fc	alpha_setting.h	193;"	d
TRQ_LMT0_ad	alpha_setting.h	287;"	d
TRQ_LMT0_fc	alpha_setting.h	177;"	d
TRQ_LMT1_ad	alpha_setting.h	288;"	d
TRQ_LMT1_fc	alpha_setting.h	178;"	d
TRQ_LMT_DETC_ad	alpha_setting.h	342;"	d
TRQ_LMT_DETC_fc	alpha_setting.h	232;"	d
TRUE	am335x_setting.c	16;"	d	file:
TRUE	modbus.h	52;"	d
VERSION	config.h	155;"	d
WINVER	modbus-tcp.c	34;"	d	file:
X1_ad	alpha_setting.h	312;"	d
X1_fc	alpha_setting.h	202;"	d
X2_ad	alpha_setting.h	313;"	d
X2_fc	alpha_setting.h	203;"	d
X3_ad	alpha_setting.h	314;"	d
X3_fc	alpha_setting.h	204;"	d
ZRO_DEVI_ad	alpha_setting.h	339;"	d
ZRO_DEVI_fc	alpha_setting.h	229;"	d
ZRO_SPEED_ad	alpha_setting.h	340;"	d
ZRO_SPEED_fc	alpha_setting.h	230;"	d
_BYTE_TIMEOUT	modbus-private.h	52;"	d
_DICTIONARY_H_	dictionary.h	15;"	d
_ELOG_CFG_H_	elog_cfg.h	30;"	d
_FC_READ_COILS	modbus-private.h	55;"	d
_FC_READ_DISCRETE_INPUTS	modbus-private.h	56;"	d
_FC_READ_EXCEPTION_STATUS	modbus-private.h	61;"	d
_FC_READ_HOLDING_REGISTERS	modbus-private.h	57;"	d
_FC_READ_INPUT_REGISTERS	modbus-private.h	58;"	d
_FC_REPORT_SLAVE_ID	modbus-private.h	64;"	d
_FC_WRITE_AND_READ_REGISTERS	modbus-private.h	65;"	d
_FC_WRITE_MULTIPLE_COILS	modbus-private.h	62;"	d
_FC_WRITE_MULTIPLE_REGISTERS	modbus-private.h	63;"	d
_FC_WRITE_SINGLE_COIL	modbus-private.h	59;"	d
_FC_WRITE_SINGLE_REGISTER	modbus-private.h	60;"	d
_INIPARSER_H_	iniparser.h	11;"	d
_MIN_REQ_LENGTH	modbus-private.h	44;"	d
_MODBUS_BACKEND_TYPE_RTU	modbus-private.h	/^    _MODBUS_BACKEND_TYPE_RTU=0,$/;"	e	enum:__anon5
_MODBUS_BACKEND_TYPE_TCP	modbus-private.h	/^    _MODBUS_BACKEND_TYPE_TCP$/;"	e	enum:__anon5
_MODBUS_EXCEPTION_RSP_LENGTH	modbus-private.h	48;"	d
_MODBUS_H_	modbus.h	20;"	d
_MODBUS_PRIVATE_H_	modbus-private.h	20;"	d
_MODBUS_RTU_CHECKSUM_LENGTH	modbus-rtu-private.h	38;"	d
_MODBUS_RTU_HEADER_LENGTH	modbus-rtu-private.h	34;"	d
_MODBUS_RTU_H_	modbus-rtu.h	20;"	d
_MODBUS_RTU_PRESET_REQ_LENGTH	modbus-rtu-private.h	35;"	d
_MODBUS_RTU_PRESET_RSP_LENGTH	modbus-rtu-private.h	36;"	d
_MODBUS_RTU_PRIVATE_H_	modbus-rtu-private.h	20;"	d
_MODBUS_TCP_CHECKSUM_LENGTH	modbus-tcp-private.h	26;"	d
_MODBUS_TCP_HEADER_LENGTH	modbus-tcp-private.h	22;"	d
_MODBUS_TCP_H_	modbus-tcp.h	20;"	d
_MODBUS_TCP_PI_NODE_LENGTH	modbus-tcp-private.h	35;"	d
_MODBUS_TCP_PI_SERVICE_LENGTH	modbus-tcp-private.h	36;"	d
_MODBUS_TCP_PRESET_REQ_LENGTH	modbus-tcp-private.h	23;"	d
_MODBUS_TCP_PRESET_RSP_LENGTH	modbus-tcp-private.h	24;"	d
_MODBUS_TCP_PRIVATE_H_	modbus-tcp-private.h	20;"	d
_MODBUS_VERSION_H_	modbus-version.h	19;"	d
_REPORT_SLAVE_ID	modbus-private.h	46;"	d
_RESPONSE_TIMEOUT	modbus-private.h	51;"	d
_STEP_DATA	modbus.c	/^    _STEP_DATA$/;"	e	enum:__anon10	file:
_STEP_FUNCTION	modbus.c	/^    _STEP_FUNCTION,$/;"	e	enum:__anon10	file:
_STEP_META	modbus.c	/^    _STEP_META,$/;"	e	enum:__anon10	file:
__ELOG_H__	elog.h	30;"	d
_dictionary_	dictionary.h	/^typedef struct _dictionary_ {$/;"	s
_error_print	modbus.c	/^void _error_print(modbus_t *ctx, const char *context)$/;"	f
_line_status_	iniparser.c	/^typedef enum _line_status_ {$/;"	g	file:
_modbus	modbus-private.h	/^struct _modbus {$/;"	s
_modbus_backend	modbus-private.h	/^typedef struct _modbus_backend {$/;"	s
_modbus_init_common	modbus.c	/^void _modbus_init_common(modbus_t *ctx)$/;"	f
_modbus_rtu	modbus-rtu-private.h	/^typedef struct _modbus_rtu {$/;"	s
_modbus_rtu_backend	modbus-rtu.c	/^const modbus_backend_t _modbus_rtu_backend = {$/;"	v
_modbus_rtu_build_request_basis	modbus-rtu.c	/^static int _modbus_rtu_build_request_basis(modbus_t *ctx, int function,$/;"	f	file:
_modbus_rtu_build_response_basis	modbus-rtu.c	/^static int _modbus_rtu_build_response_basis(sft_t *sft, uint8_t *rsp)$/;"	f	file:
_modbus_rtu_check_integrity	modbus-rtu.c	/^int _modbus_rtu_check_integrity(modbus_t *ctx, uint8_t *msg,$/;"	f
_modbus_rtu_close	modbus-rtu.c	/^void _modbus_rtu_close(modbus_t *ctx)$/;"	f
_modbus_rtu_connect	modbus-rtu.c	/^static int _modbus_rtu_connect(modbus_t *ctx)$/;"	f	file:
_modbus_rtu_filter_request	modbus-rtu.c	/^int _modbus_rtu_filter_request(modbus_t *ctx, int slave)$/;"	f
_modbus_rtu_flush	modbus-rtu.c	/^int _modbus_rtu_flush(modbus_t *ctx)$/;"	f
_modbus_rtu_prepare_response_tid	modbus-rtu.c	/^int _modbus_rtu_prepare_response_tid(const uint8_t *req, int *req_length)$/;"	f
_modbus_rtu_recv	modbus-rtu.c	/^ssize_t _modbus_rtu_recv(modbus_t *ctx, uint8_t *rsp, int rsp_length)$/;"	f
_modbus_rtu_select	modbus-rtu.c	/^int _modbus_rtu_select(modbus_t *ctx, fd_set *rfds,$/;"	f
_modbus_rtu_send	modbus-rtu.c	/^ssize_t _modbus_rtu_send(modbus_t *ctx, const uint8_t *req, int req_length)$/;"	f
_modbus_rtu_send_msg_pre	modbus-rtu.c	/^int _modbus_rtu_send_msg_pre(uint8_t *req, int req_length)$/;"	f
_modbus_set_slave	modbus-rtu.c	/^static int _modbus_set_slave(modbus_t *ctx, int slave)$/;"	f	file:
_modbus_set_slave	modbus-tcp.c	/^static int _modbus_set_slave(modbus_t *ctx, int slave)$/;"	f	file:
_modbus_tcp	modbus-tcp-private.h	/^typedef struct _modbus_tcp {$/;"	s
_modbus_tcp_backend	modbus-tcp.c	/^const modbus_backend_t _modbus_tcp_backend = {$/;"	v
_modbus_tcp_build_request_basis	modbus-tcp.c	/^int _modbus_tcp_build_request_basis(modbus_t *ctx, int function,$/;"	f
_modbus_tcp_build_response_basis	modbus-tcp.c	/^int _modbus_tcp_build_response_basis(sft_t *sft, uint8_t *rsp)$/;"	f
_modbus_tcp_check_integrity	modbus-tcp.c	/^int _modbus_tcp_check_integrity(modbus_t *ctx, uint8_t *msg, const int msg_length)$/;"	f
_modbus_tcp_close	modbus-tcp.c	/^void _modbus_tcp_close(modbus_t *ctx)$/;"	f
_modbus_tcp_connect	modbus-tcp.c	/^static int _modbus_tcp_connect(modbus_t *ctx)$/;"	f	file:
_modbus_tcp_filter_request	modbus-tcp.c	/^int _modbus_tcp_filter_request(modbus_t *ctx, int slave)$/;"	f
_modbus_tcp_flush	modbus-tcp.c	/^int _modbus_tcp_flush(modbus_t *ctx)$/;"	f
_modbus_tcp_init_win32	modbus-tcp.c	/^static int _modbus_tcp_init_win32(void)$/;"	f	file:
_modbus_tcp_pi	modbus-tcp-private.h	/^typedef struct _modbus_tcp_pi {$/;"	s
_modbus_tcp_pi_backend	modbus-tcp.c	/^const modbus_backend_t _modbus_tcp_pi_backend = {$/;"	v
_modbus_tcp_pi_connect	modbus-tcp.c	/^static int _modbus_tcp_pi_connect(modbus_t *ctx)$/;"	f	file:
_modbus_tcp_pre_check_confirmation	modbus-tcp.c	/^int _modbus_tcp_pre_check_confirmation(modbus_t *ctx, const uint8_t *req,$/;"	f
_modbus_tcp_prepare_response_tid	modbus-tcp.c	/^int _modbus_tcp_prepare_response_tid(const uint8_t *req, int *req_length)$/;"	f
_modbus_tcp_recv	modbus-tcp.c	/^ssize_t _modbus_tcp_recv(modbus_t *ctx, uint8_t *rsp, int rsp_length) {$/;"	f
_modbus_tcp_select	modbus-tcp.c	/^int _modbus_tcp_select(modbus_t *ctx, fd_set *rfds, struct timeval *tv, int length_to_read)$/;"	f
_modbus_tcp_send	modbus-tcp.c	/^ssize_t _modbus_tcp_send(modbus_t *ctx, const uint8_t *req, int req_length)$/;"	f
_modbus_tcp_send_msg_pre	modbus-tcp.c	/^int _modbus_tcp_send_msg_pre(uint8_t *req, int req_length)$/;"	f
_modbus_tcp_set_ipv4_options	modbus-tcp.c	/^static int _modbus_tcp_set_ipv4_options(int s)$/;"	f	file:
_sft	modbus-private.h	/^typedef struct _sft {$/;"	s
_sleep_and_flush	modbus.c	/^int _sleep_and_flush(modbus_t *ctx)$/;"	f
_step_t	modbus.c	/^} _step_t;$/;"	t	typeref:enum:__anon10	file:
assert	elog.h	237;"	d
async_get_buf_space	elog_async.c	/^static size_t async_get_buf_space(void) {$/;"	f	file:
async_output	elog_async.c	/^static void *async_output(void *arg) {$/;"	f	file:
async_output_thread	elog_async.c	/^static pthread_t async_output_thread;$/;"	v	file:
async_put_log	elog_async.c	/^static size_t async_put_log(const char *log, size_t size) {$/;"	f	file:
backend	modbus-private.h	/^    const modbus_backend_t *backend;$/;"	m	struct:_modbus
backend_data	modbus-private.h	/^    void *backend_data;$/;"	m	struct:_modbus
backend_type	modbus-private.h	/^    unsigned int backend_type;$/;"	m	struct:_modbus_backend
baud	modbus-rtu-private.h	/^    int baud;$/;"	m	struct:_modbus_rtu
buf	modbus-rtu-private.h	/^	uint8_t buf[PY_BUF_SIZE];$/;"	m	struct:win32_ser
buf_is_empty	elog_async.c	/^static bool buf_is_empty = true;$/;"	v	file:
buf_is_full	elog_async.c	/^static bool buf_is_full = false;$/;"	v	file:
buf_write_size	elog_buf.c	/^static size_t buf_write_size = 0;$/;"	v	file:
buff	am335x_setting.c	/^char buff[512];$/;"	v
build_request_basis	modbus-private.h	/^    int (*build_request_basis) (modbus_t *ctx, int function, int addr,$/;"	m	struct:_modbus_backend
build_response_basis	modbus-private.h	/^    int (*build_response_basis) (sft_t *sft, uint8_t *rsp);$/;"	m	struct:_modbus_backend
byte_timeout	modbus-private.h	/^    struct timeval byte_timeout;$/;"	m	struct:_modbus	typeref:struct:_modbus::timeval
check_confirmation	modbus.c	/^static int check_confirmation(modbus_t *ctx, uint8_t *req,$/;"	f	file:
check_integrity	modbus-private.h	/^    int (*check_integrity) (modbus_t *ctx, uint8_t *msg,$/;"	m	struct:_modbus_backend
checksum_length	modbus-private.h	/^    unsigned int checksum_length;$/;"	m	struct:_modbus_backend
close	modbus-private.h	/^    void (*close) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
close	modbus-tcp.c	38;"	d	file:
close_modbus_rtu_master	alpha_setting.c	/^void  close_modbus_rtu_master()$/;"	f
close_uart	am335x_setting.c	/^void close_uart()$/;"	f
color_output_info	elog.c	/^static const char *color_output_info[] = {$/;"	v	file:
compute_data_length_after_meta	modbus.c	/^static int compute_data_length_after_meta(modbus_t *ctx, uint8_t *msg,$/;"	f	file:
compute_meta_length_after_function	modbus.c	/^static uint8_t compute_meta_length_after_function(int function,$/;"	f	file:
compute_response_length_from_request	modbus.c	/^static unsigned int compute_response_length_from_request(modbus_t *ctx, uint8_t *req)$/;"	f	file:
connect	modbus-private.h	/^    int (*connect) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
crc16	modbus-rtu.c	/^static uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)$/;"	f	file:
create_example_ini_file	client.c	/^void create_example_ini_file(void)$/;"	f
cruise	alpha_motion_control.c	/^void cruise()$/;"	f
cruise_left_position	alpha_motion_control.c	/^uint16_t cruise_left_position[2];$/;"	v
cruise_right_position	alpha_motion_control.c	/^uint16_t cruise_right_position[2];$/;"	v
cruise_speed	alpha_motion_control.c	/^uint16_t cruise_speed[2];$/;"	v
ctx	alpha_setting.c	/^modbus_t *ctx = NULL;$/;"	v
cur_v	am335x_setting.c	/^unsigned short  cur_v;$/;"	v
data_bit	modbus-rtu-private.h	/^    uint8_t data_bit;$/;"	m	struct:_modbus_rtu
debug	modbus-private.h	/^    int debug;$/;"	m	struct:_modbus
debugnum	am335x_setting.c	35;"	d	file:
default_error_callback	iniparser.c	/^static int default_error_callback(const char *format, ...)$/;"	f	file:
device	modbus-rtu-private.h	/^    char device[64];$/;"	m	struct:_modbus_rtu
dictionary	dictionary.h	/^} dictionary ;$/;"	t	typeref:struct:_dictionary_
dictionary_del	dictionary.c	/^void dictionary_del(dictionary * d)$/;"	f
dictionary_dump	dictionary.c	/^void dictionary_dump(const dictionary * d, FILE * out)$/;"	f
dictionary_get	dictionary.c	/^const char * dictionary_get(const dictionary * d, const char * key, const char * def)$/;"	f
dictionary_grow	dictionary.c	/^static int dictionary_grow(dictionary * d)$/;"	f	file:
dictionary_hash	dictionary.c	/^unsigned dictionary_hash(const char * key)$/;"	f
dictionary_new	dictionary.c	/^dictionary * dictionary_new(size_t size)$/;"	f
dictionary_set	dictionary.c	/^int dictionary_set(dictionary * d, const char * key, const char * val)$/;"	f
dictionary_unset	dictionary.c	/^void dictionary_unset(dictionary * d, const char * key)$/;"	f
elog	elog.c	/^static EasyLogger elog;$/;"	v	file:
elog_a	elog.h	187;"	d
elog_a	elog.h	72;"	d
elog_assert	elog.h	80;"	d
elog_assert	elog.h	83;"	d
elog_assert_hook	elog.c	/^void (*elog_assert_hook)(const char* expr, const char* func, size_t line);$/;"	v
elog_assert_set_hook	elog.c	/^void elog_assert_set_hook(void (*hook)(const char* expr, const char* func, size_t line)) {$/;"	f
elog_async_enabled	elog_async.c	/^void elog_async_enabled(bool enabled) {$/;"	f
elog_async_get_buf_used	elog_async.c	/^static size_t elog_async_get_buf_used(void) {$/;"	f	file:
elog_async_get_line_log	elog_async.c	/^size_t elog_async_get_line_log(char *log, size_t size) {$/;"	f
elog_async_get_log	elog_async.c	/^size_t elog_async_get_log(char *log, size_t size) {$/;"	f
elog_async_init	elog_async.c	/^ElogErrCode elog_async_init(void) {$/;"	f
elog_async_output	elog_async.c	/^void elog_async_output(const char *log, size_t size) {$/;"	f
elog_async_output_notice	elog_async.c	/^void elog_async_output_notice(void) {$/;"	f
elog_buf_enabled	elog_buf.c	/^void elog_buf_enabled(bool enabled) {$/;"	f
elog_buf_output	elog_buf.c	/^void elog_buf_output(const char *log, size_t size) {$/;"	f
elog_close	elog.c	/^void elog_close(void) {$/;"	f
elog_cpyln	elog_utils.c	/^size_t elog_cpyln(char *line, const char *log, size_t len) {$/;"	f
elog_d	elog.h	191;"	d
elog_d	elog.h	76;"	d
elog_debug	elog.h	108;"	d
elog_debug	elog.h	111;"	d
elog_e	elog.h	188;"	d
elog_e	elog.h	73;"	d
elog_error	elog.h	87;"	d
elog_error	elog.h	90;"	d
elog_find_lvl	elog.c	/^int8_t elog_find_lvl(const char *log) {$/;"	f
elog_find_tag	elog.c	/^const char *elog_find_tag(const char *log, uint8_t lvl, size_t *tag_len) {$/;"	f
elog_flush	elog_buf.c	/^void elog_flush(void) {$/;"	f
elog_get_output_enabled	elog.c	/^bool elog_get_output_enabled(void) {$/;"	f
elog_get_text_color_enabled	elog.c	/^bool elog_get_text_color_enabled(void) {$/;"	f
elog_i	elog.h	190;"	d
elog_i	elog.h	75;"	d
elog_info	elog.h	101;"	d
elog_info	elog.h	104;"	d
elog_init	elog.c	/^ElogErrCode elog_init(void) {$/;"	f
elog_memcpy	elog_utils.c	/^void *elog_memcpy(void *dst, const void *src, size_t count) {$/;"	f
elog_output	elog.c	/^void elog_output(uint8_t level, const char *tag, const char *file, const char *func,$/;"	f
elog_output_lock	elog.c	/^void elog_output_lock(void) {$/;"	f
elog_output_lock_enabled	elog.c	/^void elog_output_lock_enabled(bool enabled) {$/;"	f
elog_output_unlock	elog.c	/^void elog_output_unlock(void) {$/;"	f
elog_port_close	elog_port.c	/^ElogErrCode elog_port_close(void) {$/;"	f
elog_port_get_p_info	elog_port.c	/^const char *elog_port_get_p_info(void) {$/;"	f
elog_port_get_t_info	elog_port.c	/^const char *elog_port_get_t_info(void) {$/;"	f
elog_port_get_time	elog_port.c	/^const char *elog_port_get_time(void) {$/;"	f
elog_port_init	elog_port.c	/^ElogErrCode elog_port_init(void) {$/;"	f
elog_port_output	elog_port.c	/^void elog_port_output(const char *log, size_t size) {$/;"	f
elog_port_output_lock	elog_port.c	/^void elog_port_output_lock(void) {$/;"	f
elog_port_output_unlock	elog_port.c	/^void elog_port_output_unlock(void) {$/;"	f
elog_raw	elog.c	/^void elog_raw(const char *format, ...) {$/;"	f
elog_set_filter	elog.c	/^void elog_set_filter(uint8_t level, const char *tag, const char *keyword) {$/;"	f
elog_set_filter_kw	elog.c	/^void elog_set_filter_kw(const char *keyword) {$/;"	f
elog_set_filter_lvl	elog.c	/^void elog_set_filter_lvl(uint8_t level) {$/;"	f
elog_set_filter_tag	elog.c	/^void elog_set_filter_tag(const char *tag) {$/;"	f
elog_set_fmt	elog.c	/^void elog_set_fmt(uint8_t level, size_t set) {$/;"	f
elog_set_output_enabled	elog.c	/^void elog_set_output_enabled(bool enabled) {$/;"	f
elog_set_text_color_enabled	elog.c	/^void elog_set_text_color_enabled(bool enabled) {$/;"	f
elog_start	elog.c	/^void elog_start(void) {$/;"	f
elog_strcpy	elog_utils.c	/^size_t elog_strcpy(size_t cur_len, char *dst, const char *src) {$/;"	f
elog_v	elog.h	192;"	d
elog_v	elog.h	77;"	d
elog_verbose	elog.h	115;"	d
elog_verbose	elog.h	118;"	d
elog_w	elog.h	189;"	d
elog_w	elog.h	74;"	d
elog_warn	elog.h	94;"	d
elog_warn	elog.h	97;"	d
enabled_fmt_set	elog.h	/^    size_t enabled_fmt_set[ELOG_LVL_TOTAL_NUM];$/;"	m	struct:__anon3
encoder_position	am335x_setting.c	/^int encoder_position;$/;"	v
error_recovery	modbus-private.h	/^    int error_recovery;$/;"	m	struct:_modbus
fd	am335x_setting.c	/^int fd=-1;$/;"	v
fd	modbus-rtu-private.h	/^	HANDLE fd;$/;"	m	struct:win32_ser
filter	elog.h	/^    ElogFilter filter;$/;"	m	struct:__anon3
filter_request	modbus-private.h	/^    int (*filter_request) (modbus_t *ctx, int slave);$/;"	m	struct:_modbus_backend
flush	modbus-private.h	/^    int (*flush) (modbus_t *ctx);$/;"	m	struct:_modbus_backend
forced_stop_off	alpha_motion_control.c	/^int forced_stop_off()$/;"	f
forced_stop_on	alpha_motion_control.c	/^int forced_stop_on()$/;"	f
forward_command_test	alpha_motion_test.c	/^void forward_command_test()$/;"	f
free_buffers_for_modbus	alpha_setting.c	/^void free_buffers_for_modbus()$/;"	f
free_run_off	alpha_motion_control.c	/^int free_run_off()$/;"	f
free_run_on	alpha_motion_control.c	/^int free_run_on()$/;"	f
function	modbus-private.h	/^    int function;$/;"	m	struct:_sft
g_flags	client.c	/^volatile uint32_t g_flags;$/;"	v
get_fmt_enabled	elog.c	/^static bool get_fmt_enabled(uint8_t level, size_t set) {$/;"	f	file:
hash	dictionary.h	/^    unsigned     *  hash ;  \/** List of hash values for keys *\/$/;"	m	struct:_dictionary_
header_length	modbus-private.h	/^    unsigned int header_length;$/;"	m	struct:_modbus_backend
imme_acceleration_time	alpha_motion_control.c	/^uint16_t imme_acceleration_time[2];$/;"	v
imme_deceleration_time	alpha_motion_control.c	/^uint16_t imme_deceleration_time[2];$/;"	v
immediate_value_data_op_test	alpha_motion_test.c	/^void immediate_value_data_op_test()$/;"	f
immediate_value_date_operation_485_setting	alpha_setting.c	/^void immediate_value_date_operation_485_setting()$/;"	f
immediate_value_operation_run	alpha_motion_control.c	/^int immediate_value_operation_run()$/;"	f
iniparser_dump	iniparser.c	/^void iniparser_dump(const dictionary * d, FILE * f)$/;"	f
iniparser_dump_ini	iniparser.c	/^void iniparser_dump_ini(const dictionary * d, FILE * f)$/;"	f
iniparser_dumpsection_ini	iniparser.c	/^void iniparser_dumpsection_ini(const dictionary * d, const char * s, FILE * f)$/;"	f
iniparser_error_callback	iniparser.c	/^static int (*iniparser_error_callback)(const char*, ...) = default_error_callback;$/;"	v	file:
iniparser_find_entry	iniparser.c	/^int iniparser_find_entry(const dictionary * ini, const char * entry)$/;"	f
iniparser_freedict	iniparser.c	/^void iniparser_freedict(dictionary * d)$/;"	f
iniparser_getboolean	iniparser.c	/^int iniparser_getboolean(const dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getdouble	iniparser.c	/^double iniparser_getdouble(const dictionary * d, const char * key, double notfound)$/;"	f
iniparser_getint	iniparser.c	/^int iniparser_getint(const dictionary * d, const char * key, int notfound)$/;"	f
iniparser_getlongint	iniparser.c	/^long int iniparser_getlongint(const dictionary * d, const char * key, long int notfound)$/;"	f
iniparser_getnsec	iniparser.c	/^int iniparser_getnsec(const dictionary * d)$/;"	f
iniparser_getseckeys	iniparser.c	/^const char ** iniparser_getseckeys(const dictionary * d, const char * s, const char ** keys)$/;"	f
iniparser_getsecname	iniparser.c	/^const char * iniparser_getsecname(const dictionary * d, int n)$/;"	f
iniparser_getsecnkeys	iniparser.c	/^int iniparser_getsecnkeys(const dictionary * d, const char * s)$/;"	f
iniparser_getstring	iniparser.c	/^const char * iniparser_getstring(const dictionary * d, const char * key, const char * def)$/;"	f
iniparser_line	iniparser.c	/^static line_status iniparser_line($/;"	f	file:
iniparser_load	iniparser.c	/^dictionary * iniparser_load(const char * ininame)$/;"	f
iniparser_set	iniparser.c	/^int iniparser_set(dictionary * ini, const char * entry, const char * val)$/;"	f
iniparser_set_error_callback	iniparser.c	/^void iniparser_set_error_callback(int (*errback)(const char *, ...))$/;"	f
iniparser_unset	iniparser.c	/^void iniparser_unset(dictionary * ini, const char * entry)$/;"	f
init_buffers_for_modbus	alpha_setting.c	/^int init_buffers_for_modbus()$/;"	f
init_ok	elog_async.c	/^static bool init_ok = false;$/;"	v	file:
init_parameters	alpha_setting.c	/^void init_parameters()$/;"	f
io_signals_mapping	alpha_setting.c	/^void io_signals_mapping()$/;"	f
ip	modbus-tcp-private.h	/^    char ip[16];$/;"	m	struct:_modbus_tcp
is_INP	alpha_motion_control.c	/^int is_INP()$/;"	f
is_enabled	elog_async.c	/^static bool is_enabled = false;$/;"	v	file:
is_enabled	elog_buf.c	/^static bool is_enabled = false;$/;"	v	file:
is_ready	alpha_motion_control.c	/^int is_ready()$/;"	f
key	dictionary.h	/^    char        **  key ;   \/** List of string keys *\/$/;"	m	struct:_dictionary_
keyword	elog.h	/^    char keyword[ELOG_FILTER_KW_MAX_LEN + 1];$/;"	m	struct:__anon2
left_cruise	alpha_motion_control.c	/^int	left_cruise()$/;"	f
left_direction_run	alpha_motion_control.c	/^int left_direction_run()$/;"	f
level	elog.h	/^    uint8_t level;$/;"	m	struct:__anon2
level_output_info	elog.c	/^static const char *level_output_info[] = {$/;"	v	file:
libmodbus_version_major	modbus.c	/^const unsigned int libmodbus_version_major = LIBMODBUS_VERSION_MAJOR;$/;"	v
libmodbus_version_micro	modbus.c	/^const unsigned int libmodbus_version_micro = LIBMODBUS_VERSION_MICRO;$/;"	v
libmodbus_version_minor	modbus.c	/^const unsigned int libmodbus_version_minor = LIBMODBUS_VERSION_MINOR;$/;"	v
line_status	iniparser.c	/^} line_status ;$/;"	t	typeref:enum:_line_status_	file:
listening_console	cmdparser.c	/^int listening_console()$/;"	f
listening_uart	am335x_setting.c	/^int listening_uart(const char* device, int baud, char parity, int data_bit, int stop_bit)$/;"	f
log_a	elog.h	205;"	d
log_a	elog.h	207;"	d
log_buf	elog.c	/^static char log_buf[ELOG_LINE_BUF_SIZE] = { 0 };$/;"	v	file:
log_buf	elog_async.c	/^static char log_buf[ELOG_ASYNC_OUTPUT_BUF_SIZE] = { 0 };$/;"	v	file:
log_buf	elog_buf.c	/^static char log_buf[ELOG_BUF_OUTPUT_BUF_SIZE] = { 0 };$/;"	v	file:
log_d	elog.h	225;"	d
log_d	elog.h	227;"	d
log_e	elog.h	210;"	d
log_e	elog.h	212;"	d
log_i	elog.h	220;"	d
log_i	elog.h	222;"	d
log_v	elog.h	230;"	d
log_v	elog.h	232;"	d
log_w	elog.h	215;"	d
log_w	elog.h	217;"	d
logfile	elog_port.c	/^static FILE* logfile=NULL;$/;"	v	file:
main	client.c	/^int main(int argc, char** argv)$/;"	f
max_adu_length	modbus-private.h	/^    unsigned int max_adu_length;$/;"	m	struct:_modbus_backend
max_left_position	am335x_setting.c	/^int max_left_position;$/;"	v
max_right_position	am335x_setting.c	/^int max_right_position;$/;"	v
modbus_backend_t	modbus-private.h	/^} modbus_backend_t;$/;"	t	typeref:struct:_modbus_backend
modbus_bakend_type_t	modbus-private.h	/^} modbus_bakend_type_t;$/;"	t	typeref:enum:__anon5
modbus_close	modbus.c	/^void modbus_close(modbus_t *ctx)$/;"	f
modbus_connect	modbus.c	/^int modbus_connect(modbus_t *ctx)$/;"	f
modbus_error_recovery_mode	modbus.h	/^} modbus_error_recovery_mode;$/;"	t	typeref:enum:__anon8
modbus_flush	modbus.c	/^int modbus_flush(modbus_t *ctx)$/;"	f
modbus_free	modbus.c	/^void modbus_free(modbus_t *ctx)$/;"	f
modbus_get_byte_from_bits	modbus-data.c	/^uint8_t modbus_get_byte_from_bits(const uint8_t *src, int index,$/;"	f
modbus_get_byte_timeout	modbus.c	/^void modbus_get_byte_timeout(modbus_t *ctx, struct timeval *timeout)$/;"	f
modbus_get_float	modbus-data.c	/^float modbus_get_float(const uint16_t *src)$/;"	f
modbus_get_header_length	modbus.c	/^int modbus_get_header_length(modbus_t *ctx)$/;"	f
modbus_get_response_timeout	modbus.c	/^void modbus_get_response_timeout(modbus_t *ctx, struct timeval *timeout)$/;"	f
modbus_get_socket	modbus.c	/^int modbus_get_socket(modbus_t *ctx)$/;"	f
modbus_mapping_free	modbus.c	/^void modbus_mapping_free(modbus_mapping_t *mb_mapping)$/;"	f
modbus_mapping_new	modbus.c	/^modbus_mapping_t* modbus_mapping_new(int nb_bits, int nb_input_bits,$/;"	f
modbus_mapping_t	modbus.h	/^} modbus_mapping_t;$/;"	t	typeref:struct:__anon7
modbus_new_rtu	modbus-rtu.c	/^modbus_t* modbus_new_rtu(const char *device,$/;"	f
modbus_new_tcp	modbus-tcp.c	/^modbus_t* modbus_new_tcp(const char *ip, int port)$/;"	f
modbus_new_tcp_pi	modbus-tcp.c	/^modbus_t* modbus_new_tcp_pi(const char *node, const char *service)$/;"	f
modbus_read_bits	modbus.c	/^int modbus_read_bits(modbus_t *ctx, int addr, int nb, uint8_t *dest)$/;"	f
modbus_read_input_bits	modbus.c	/^int modbus_read_input_bits(modbus_t *ctx, int addr, int nb, uint8_t *dest)$/;"	f
modbus_read_input_registers	modbus.c	/^int modbus_read_input_registers(modbus_t *ctx, int addr, int nb,$/;"	f
modbus_read_registers	modbus.c	/^int modbus_read_registers(modbus_t *ctx, int addr, int nb, uint16_t *dest)$/;"	f
modbus_receive	modbus.c	/^int modbus_receive(modbus_t *ctx, uint8_t *req)$/;"	f
modbus_receive_confirmation	modbus.c	/^int modbus_receive_confirmation(modbus_t *ctx, uint8_t *rsp)$/;"	f
modbus_reply	modbus.c	/^int modbus_reply(modbus_t *ctx, const uint8_t *req,$/;"	f
modbus_reply_exception	modbus.c	/^int modbus_reply_exception(modbus_t *ctx, const uint8_t *req,$/;"	f
modbus_report_slave_id	modbus.c	/^int modbus_report_slave_id(modbus_t *ctx, uint8_t *dest)$/;"	f
modbus_rtu_get_serial_mode	modbus-rtu.c	/^int modbus_rtu_get_serial_mode(modbus_t *ctx) {$/;"	f
modbus_rtu_set_serial_mode	modbus-rtu.c	/^int modbus_rtu_set_serial_mode(modbus_t *ctx, int mode)$/;"	f
modbus_rtu_t	modbus-rtu-private.h	/^} modbus_rtu_t;$/;"	t	typeref:struct:_modbus_rtu
modbus_send_raw_request	modbus.c	/^int modbus_send_raw_request(modbus_t *ctx, uint8_t *raw_req, int raw_req_length)$/;"	f
modbus_set_bits_from_byte	modbus-data.c	/^void modbus_set_bits_from_byte(uint8_t *dest, int index, const uint8_t value)$/;"	f
modbus_set_bits_from_bytes	modbus-data.c	/^void modbus_set_bits_from_bytes(uint8_t *dest, int index, unsigned int nb_bits,$/;"	f
modbus_set_byte_timeout	modbus.c	/^void modbus_set_byte_timeout(modbus_t *ctx, const struct timeval *timeout)$/;"	f
modbus_set_debug	modbus.c	/^void modbus_set_debug(modbus_t *ctx, int boolean)$/;"	f
modbus_set_error_recovery	modbus.c	/^int modbus_set_error_recovery(modbus_t *ctx,$/;"	f
modbus_set_float	modbus-data.c	/^void modbus_set_float(float f, uint16_t *dest)$/;"	f
modbus_set_response_timeout	modbus.c	/^void modbus_set_response_timeout(modbus_t *ctx, const struct timeval *timeout)$/;"	f
modbus_set_slave	modbus.c	/^int modbus_set_slave(modbus_t *ctx, int slave)$/;"	f
modbus_set_socket	modbus.c	/^void modbus_set_socket(modbus_t *ctx, int socket)$/;"	f
modbus_strerror	modbus.c	/^const char *modbus_strerror(int errnum) {$/;"	f
modbus_t	modbus.h	/^typedef struct _modbus modbus_t;$/;"	t	typeref:struct:_modbus
modbus_tcp_accept	modbus-tcp.c	/^int modbus_tcp_accept(modbus_t *ctx, int *socket)$/;"	f
modbus_tcp_listen	modbus-tcp.c	/^int modbus_tcp_listen(modbus_t *ctx, int nb_connection)$/;"	f
modbus_tcp_pi_accept	modbus-tcp.c	/^int modbus_tcp_pi_accept(modbus_t *ctx, int *socket)$/;"	f
modbus_tcp_pi_listen	modbus-tcp.c	/^int modbus_tcp_pi_listen(modbus_t *ctx, int nb_connection)$/;"	f
modbus_tcp_pi_t	modbus-tcp-private.h	/^} modbus_tcp_pi_t;$/;"	t	typeref:struct:_modbus_tcp_pi
modbus_tcp_t	modbus-tcp-private.h	/^} modbus_tcp_t;$/;"	t	typeref:struct:_modbus_tcp
modbus_write_and_read_registers	modbus.c	/^int modbus_write_and_read_registers(modbus_t *ctx,$/;"	f
modbus_write_bit	modbus.c	/^int modbus_write_bit(modbus_t *ctx, int addr, int status)$/;"	f
modbus_write_bits	modbus.c	/^int modbus_write_bits(modbus_t *ctx, int addr, int nb, const uint8_t *src)$/;"	f
modbus_write_register	modbus.c	/^int modbus_write_register(modbus_t *ctx, int addr, int value)$/;"	f
modbus_write_registers	modbus.c	/^int modbus_write_registers(modbus_t *ctx, int addr, int nb, const uint16_t *src)$/;"	f
msg_type_t	modbus.c	/^} msg_type_t;$/;"	t	typeref:enum:__anon11	file:
mutex	client.c	/^pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
n	dictionary.h	/^    int             n ;     \/** Number of entries in dictionary *\/$/;"	m	struct:_dictionary_
n_bytes	modbus-rtu-private.h	/^	DWORD n_bytes;$/;"	m	struct:win32_ser
name_arr	am335x_setting.c	/^int name_arr[] = {115200, 57600, 38400,  19200,  9600,  4800,  2400, 1200};$/;"	v
nb_bits	modbus.h	/^    int nb_bits;$/;"	m	struct:__anon7
nb_input_bits	modbus.h	/^    int nb_input_bits;$/;"	m	struct:__anon7
nb_input_registers	modbus.h	/^    int nb_input_registers;$/;"	m	struct:__anon7
nb_registers	modbus.h	/^    int nb_registers;$/;"	m	struct:__anon7
node	modbus-tcp-private.h	/^    char node[_MODBUS_TCP_PI_NODE_LENGTH];$/;"	m	struct:_modbus_tcp_pi
old_dcb	modbus-rtu-private.h	/^    DCB old_dcb;$/;"	m	struct:_modbus_rtu
old_tios	modbus-rtu-private.h	/^    struct termios old_tios;$/;"	m	struct:_modbus_rtu	typeref:struct:_modbus_rtu::termios
open_modbus_rtu_master	alpha_setting.c	/^int open_modbus_rtu_master(const char *device, int baud, char parity, int data_bit, int stop_bit, int slave)$/;"	f
output_enabled	elog.h	/^    bool output_enabled;$/;"	m	struct:__anon3
output_is_locked_before_disable	elog.h	/^    bool output_is_locked_before_disable;$/;"	m	struct:__anon3
output_is_locked_before_enable	elog.h	/^    bool output_is_locked_before_enable;$/;"	m	struct:__anon3
output_lock	elog_port.c	/^static pthread_mutex_t output_lock;$/;"	v	file:
output_lock_enabled	elog.h	/^    bool output_lock_enabled;$/;"	m	struct:__anon3
output_notice	elog_async.c	/^static sem_t output_notice;$/;"	v	file:
parity	modbus-rtu-private.h	/^    char parity;$/;"	m	struct:_modbus_rtu
parse_ini_file	client.c	/^int parse_ini_file(char * ini_name)$/;"	f
parsethread	cmdparser.c	/^void parsethread(void)$/;"	f
pause_off	alpha_motion_control.c	/^int pause_off()$/;"	f
pause_on	alpha_motion_control.c	/^int pause_on()$/;"	f
port	modbus-tcp-private.h	/^    int port;$/;"	m	struct:_modbus_tcp
port	modbus-tcp-private.h	/^    int port;$/;"	m	struct:_modbus_tcp_pi
positioning_cancel_off	alpha_motion_control.c	/^int positioning_cancel_off()$/;"	f
positioning_cancel_on	alpha_motion_control.c	/^int positioning_cancel_on()$/;"	f
positioning_data_operation_485_setting	alpha_setting.c	/^void positioning_data_operation_485_setting()$/;"	f
pre_check_confirmation	modbus-private.h	/^    int (*pre_check_confirmation) (modbus_t *ctx, const uint8_t *req,$/;"	m	struct:_modbus_backend
pre_v	am335x_setting.c	/^unsigned short  pre_v;$/;"	v
prepare_response_tid	modbus-private.h	/^    int (*prepare_response_tid) (const uint8_t *req, int *req_length);$/;"	m	struct:_modbus_backend
read_gflags	client.c	/^uint32_t read_gflags()$/;"	f
read_index	elog_async.c	/^static size_t read_index = 0;$/;"	v	file:
read_io_status	modbus.c	/^static int read_io_status(modbus_t *ctx, int function,$/;"	f	file:
read_registers	modbus.c	/^static int read_registers(modbus_t *ctx, int function, int addr, int nb,$/;"	f	file:
receive_msg	modbus.c	/^static int receive_msg(modbus_t *ctx, uint8_t *msg, msg_type_t msg_type)$/;"	f	file:
receivethread	am335x_setting.c	/^void receivethread(void)$/;"	f
recv	modbus-private.h	/^    ssize_t (*recv) (modbus_t *ctx, uint8_t *rsp, int rsp_length);$/;"	m	struct:_modbus_backend
response_exception	modbus.c	/^static int response_exception(modbus_t *ctx, sft_t *sft,$/;"	f	file:
response_io_status	modbus.c	/^static int response_io_status(int address, int nb,$/;"	f	file:
response_timeout	modbus-private.h	/^    struct timeval response_timeout;$/;"	m	struct:_modbus	typeref:struct:_modbus::timeval
right_cruise	alpha_motion_control.c	/^int right_cruise()$/;"	f
right_direction_run	alpha_motion_control.c	/^int right_direction_run()$/;"	f
s	modbus-private.h	/^    int s;$/;"	m	struct:_modbus
select	modbus-private.h	/^    int (*select) (modbus_t *ctx, fd_set *rfds, struct timeval *tv, int msg_length);$/;"	m	struct:_modbus_backend
send	modbus-private.h	/^    ssize_t (*send) (modbus_t *ctx, const uint8_t *req, int req_length);$/;"	m	struct:_modbus_backend
send_cruise_speed	alpha_motion_control.c	/^int send_cruise_speed()$/;"	f
send_imme_acceleration_time	alpha_motion_control.c	/^int send_imme_acceleration_time()$/;"	f
send_imme_deceleration_time	alpha_motion_control.c	/^int send_imme_deceleration_time()$/;"	f
send_msg	modbus.c	/^static int send_msg(modbus_t *ctx, uint8_t *msg, int msg_length)$/;"	f	file:
send_msg_pre	modbus-private.h	/^    int (*send_msg_pre) (uint8_t *req, int req_length);$/;"	m	struct:_modbus_backend
serial_mode	modbus-rtu-private.h	/^    int serial_mode;$/;"	m	struct:_modbus_rtu
serve_off	alpha_motion_control.c	/^int serve_off()$/;"	f
serve_on	alpha_motion_control.c	/^int serve_on()$/;"	f
service	modbus-tcp-private.h	/^    char service[_MODBUS_TCP_PI_SERVICE_LENGTH];$/;"	m	struct:_modbus_tcp_pi
set_Parity	am335x_setting.c	/^int set_Parity(int fd,int databits,int stopbits,int parity)$/;"	f
set_abs_control_mode	alpha_motion_control.c	/^int set_abs_control_mode()$/;"	f
set_cruise_left_position	alpha_motion_control.c	/^int set_cruise_left_position(const int32_t position)$/;"	f
set_cruise_right_position	alpha_motion_control.c	/^int set_cruise_right_position(const int32_t position)$/;"	f
set_cruise_speed	alpha_motion_control.c	/^int set_cruise_speed(const uint32_t speed)$/;"	f
set_imme_acceleration_time	alpha_motion_control.c	/^int set_imme_acceleration_time(const uint32_t time)$/;"	f
set_imme_deceleration_time	alpha_motion_control.c	/^int set_imme_deceleration_time(const uint32_t time)$/;"	f
set_inc_control_mode	alpha_motion_control.c	/^int set_inc_control_mode()$/;"	f
set_slave	modbus-private.h	/^    int (*set_slave) (modbus_t *ctx, int slave);$/;"	m	struct:_modbus_backend
set_speed	am335x_setting.c	/^void set_speed(int fd, int speed)$/;"	f
sft_t	modbus-private.h	/^} sft_t;$/;"	t	typeref:struct:_sft
size	dictionary.h	/^    ssize_t         size ;  \/** Storage size *\/$/;"	m	struct:_dictionary_
slave	modbus-private.h	/^    int slave;$/;"	m	struct:_modbus
slave	modbus-private.h	/^    int slave;$/;"	m	struct:_sft
speed_arr	am335x_setting.c	/^int speed_arr[] = {  B115200, B57600, B38400, B19200, B9600, B4800,$/;"	v
ssize_t	modbus-private.h	/^typedef int ssize_t;$/;"	t
stop_bit	modbus-rtu-private.h	/^    uint8_t stop_bit;$/;"	m	struct:_modbus_rtu
stride	am335x_setting.c	/^int stride;$/;"	v
strlcpy	modbus.c	/^size_t strlcpy(char *dest, const char *src, size_t dest_size)$/;"	f
strlwc	iniparser.c	/^static const char * strlwc(const char * in, char *out, unsigned len)$/;"	f	file:
strstrip	iniparser.c	/^static unsigned strstrip(char * s)$/;"	f	file:
t_id	modbus-private.h	/^    int t_id;$/;"	m	struct:_sft
tab_bits	modbus.h	/^    uint8_t *tab_bits;$/;"	m	struct:__anon7
tab_input_bits	modbus.h	/^    uint8_t *tab_input_bits;$/;"	m	struct:__anon7
tab_input_registers	modbus.h	/^    uint16_t *tab_input_registers;$/;"	m	struct:__anon7
tab_registers	modbus.h	/^    uint16_t *tab_registers;$/;"	m	struct:__anon7
tab_rp_bits	alpha_setting.c	/^uint8_t	 *tab_rp_bits;$/;"	v
tab_rp_registers	alpha_setting.c	/^uint16_t *tab_rp_registers; $/;"	v
tab_rq_bits	alpha_setting.c	/^uint8_t  *tab_rq_bits;$/;"	v
tab_rq_registers	alpha_setting.c	/^uint16_t *tab_rq_registers;$/;"	v
table_crc_hi	modbus-rtu.c	/^static const uint8_t table_crc_hi[] = {$/;"	v	file:
table_crc_lo	modbus-rtu.c	/^static const uint8_t table_crc_lo[] = {$/;"	v	file:
tag	elog.h	/^    char tag[ELOG_FILTER_TAG_MAX_LEN + 1];$/;"	m	struct:__anon2
text_color_enabled	elog.h	/^    bool text_color_enabled;$/;"	m	struct:__anon3
val	dictionary.h	/^    char        **  val ;   \/** List of string values *\/$/;"	m	struct:_dictionary_
w_ser	modbus-rtu-private.h	/^    struct win32_ser w_ser;$/;"	m	struct:_modbus_rtu	typeref:struct:_modbus_rtu::win32_ser
win32_ser	modbus-rtu-private.h	/^struct win32_ser {$/;"	s
win32_ser_init	modbus-rtu.c	/^static void win32_ser_init(struct win32_ser *ws) {$/;"	f	file:
win32_ser_read	modbus-rtu.c	/^static int win32_ser_read(struct win32_ser *ws, uint8_t *p_msg,$/;"	f	file:
win32_ser_select	modbus-rtu.c	/^static int win32_ser_select(struct win32_ser *ws, int max_len,$/;"	f	file:
write_gflags	client.c	/^void write_gflags(uint32_t flags)$/;"	f
write_index	elog_async.c	/^static size_t write_index = 0;$/;"	v	file:
write_single	modbus.c	/^static int write_single(modbus_t *ctx, int function, int addr, int value)$/;"	f	file:
xstrdup	dictionary.c	/^static char * xstrdup(const char * s)$/;"	f	file:
xstrdup	iniparser.c	/^static char * xstrdup(const char * s)$/;"	f	file:
